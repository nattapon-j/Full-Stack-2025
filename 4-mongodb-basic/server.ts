// npm i body-parser
// npm i dotenv
// npm i typescript ts-node @types/node --save-dev  
// npm i prisma --save-dev 
// npx prisma init --datasource-provider mongodb
// npx prisma generate

const express = require('express');
const bodyParser = require('body-parser');
const dotenv = require('dotenv');
const port = 3000;

// const { PrismaClient } = require('@prisma/client');
const { PrismaClient } = require('./generated/prisma')

const prisma = new PrismaClient();

dotenv.config();

const app = express();
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));

app.get('/check-db-connection', async (req, res) => {
    try {
        await prisma.$connect();
        res.send({ message: 'Database connection successful' });
    } catch (error) {
        res.status(500).send({ message: 'Database connection failed', error });
    }
}
);

app.listen(port, () => {
    console.log(`Server is running on http://localhost:${port}`);
}
);
// Prisma Client is a type-safe database client generated by Prisma
// Prisma Client is auto-generated and can be used to perform database operations
// Prisma Client is generated based on the Prisma schema